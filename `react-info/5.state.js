Если props - это статическое свойство и его нельзя изменить, то state - динамическое

Дефолтные значения задаются через свойство getInitialState

getInitialState {
    Если вы определяете какое- то изменяемое свойство в компоненте, необходимо указать начальное состояние (в терминологии react.js - initial state).Для этого, у компонента указывается метод getInitialState:

    getInitialState: function() {
        return {
            visible: false
        };
    },
}

чтобы обрабатывать события на элементе прописывается атрибут onclick
для изменения состояния необходимо использовать метод setState, а не просто перезаписывать значения переменной

getInitialState: () => {
    return {
        visible: false
    };
},
    readmoreClick: function (e) {
        e.preventDefault();
        this.setState({ visible: true });
    },

onClick = { this.readmoreClick }

по клику выполняется функция readmoreClick
изменения состояния происходит через метод this.setState
он принимает объект с аругментами, которые нужно изменить


также у setState есть возможность принять callback с какой- то функций {
    this.setState({ visible: true }, function () {
        alert('Состояние изменилось');
    });
}

setState() - не изменяет this.state немедленно, а создает очередь изменений состояния.Доступ к this.state после вызова метода, потенциально может вернуть имеющееся (что равносильно - бывшее) значение. {

    использовать префиксную форму
}


//неконтролируемый компонент
{
    Главное отличие от контролируемого - у него нет обработчика изменений, нет постоянных вызовов и перерисовок

    Для того чтобы считать значение такого компонента используется вспомогательная функция вспомогательной библиотеки  ReactDOM - ReactDOM.findDOMNode, а для того, чтобы можно было найти с помощью нее элемент, используется атрибут ref.


    неконтролируемые компоненты, в которых данные формы обрабатываются самим DOM.
    При написании неконтролируемого компонента, вместо того, чтобы писать обработчик событий для каждого обновления состояния, вы можете использовать ref для получения значений формы из DOM.
}

